@* Generator: MvcView *@

@using LCore;
@using MVCL;
@using MVCL.Models;
@using MVCL.Controllers;
@using MVCL.Context;
@using System.Linq;
@using System.Linq.Expressions;
@using System.Collections;
@using System.Collections.Generic;
@using System.ComponentModel;
@using System.ComponentModel.DataAnnotations;
@using System.ComponentModel.Design;
@using System.Web;
@using System.Web.Mvc;

@{
    Boolean InlineEdit = ViewBag.InlineEdit == true && ViewBag.InlineEditID == Model.GetID();

    ControllerHelper.ViewType[] ViewTypes = InlineEdit ?
        new[] { ControllerHelper.ViewType.Edit, ControllerHelper.ViewType.TableCell } :
        new[] { ControllerHelper.ViewType.TableCell };

    IEnumerable<System.Web.ModelBinding.ModelMetadata> Fields = null;

    if (Model is IFieldGroups)
        {
        Fields = ((IFieldGroups)Model).GetFieldGroup(Context, ControllerHelper.ViewType.TableCell);
        }
    else
        {
        Fields = FieldGroups.GetFieldGroup(Context, Model.TrueModelType(), ControllerHelper.ViewType.TableCell);
        }
}

@model IModel

<tr>


    @if (!InlineEdit &&
        ViewContext.Controller is ManageController &&
        ((ManageController)ViewContext.Controller).OverridePermissions.View == true &&
        ControllerHelper.AllowView(Session, Model.TrueModelType()))
        {
        <td class="view-cell center">
            <div>
                <a href="@Url.Action(ViewBag.ManageModel.Controller.DetailViewActionName,
                    ViewBag.ManageModel.Controller.Name,
                    ViewBag.ManageModel.Route_DetailView(Model, Request))">
                    <span class="glyphicon pointer">
                        &#xe003;
                    </span>
                </a>
            </div>
        </td>
        }

    @foreach (System.Web.ModelBinding.ModelMetadata Meta in Fields)
        {
        ViewField Field = new ViewField(Context, Model.TrueModelType(), Meta.PropertyName, Model, ViewTypes);

        @Html.Partial(ControllerHelper.PartialViews.Field, Field)
        }

    @if (!InlineEdit &&
        ViewContext.Controller is ManageController &&
        ((ManageController)ViewContext.Controller).OverridePermissions.Edit == true &&
        ControllerHelper.AllowEdit(Session, Model.TrueModelType()))
        {
        <td class="edit-cell center">
            <div>
                <a href="@Url.Action(ViewBag.ManageModel.Controller.EditActionName,
                    ViewBag.ManageModel.Controller.Name,
                    ViewBag.ManageModel.Route_Edit(Model, Request))"
                   ctrl-href="@Url.Action(ViewBag.ManageModel.Controller.ManageActionName,
                    ViewBag.ManageModel.Controller.Name,
                    ViewBag.ManageModel.Route_InlineEdit(Model, Request))">
                    <span class="glyphicon pointer">
                        &#xe065;
                    </span>
                </a>
            </div>
        </td>
        }

    @if (ViewContext.Controller is ManageController &&
        ((ManageController)ViewContext.Controller).OverridePermissions.Deactivate == true &&
        ControllerHelper.AllowDeactivate(Session, Model.TrueModelType()))
        {
        <td class="deactivate-cell center">
            <div>
                <a href="@Url.Action(ViewBag.ManageModel.Controller.DeleteActionName,
                    ViewBag.ManageModel.Controller.Name,
                    ViewBag.ManageModel.Route_Delete(Model, Request))"
                    shift-href="@Url.Action(ViewBag.ManageModel.Controller.DeleteConfirmActionName,
                        ViewBag.ManageModel.Controller.Name,
                        new { id = Model.GetID(), ReturnURL = Request.Url.AbsoluteUri, Restore = ViewBag.ManageModel.ShowInactiveRecords })">
                    <span class="glyphicon pointer">

                        @Html.Raw(ViewBag.ManageModel.ShowInactiveRecords ? "&#xe133;" : "&#xe020;")

                    </span>
                </a>
            </div>
        </td>
        }
</tr>