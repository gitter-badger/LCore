@* Generator: MvcView *@

@using LCore;
@using MVCL;
@using MVCL.Models;
@using MVCL.Controllers;
@using MVCL.Context;
@using System.Collections;
@using System.Collections.Generic;
@using System.ComponentModel;
@using System.ComponentModel.Design;
@using System.Web;
@using System.Web.Mvc;
@using System.Linq;
@using System.Linq.Expressions;
@using System.ComponentModel.DataAnnotations;
@using System.ComponentModel.DataAnnotations.Schema;

@{
    Type RelationType = Model.Meta.ModelType.GetGenericArguments()[0];

}

@model IViewField

@if (Model.ViewTypes.Has(ControllerHelper.ViewType.Create))
    {
    // Can't link related models on create
    return;
    }

@if (Model.PropertyData != null &&
    Model.PropertyData is IEnumerable)
    {
    List<IModel> Models = (Model.PropertyData as IEnumerable).List().List<IModel>();

    String Title = Models.CollectStr((i, m) =>
    {
        return m.ToString() + "\r\n";
    });

    if (Models.Count > 0)
        {
        Type t = Models[0].GetType();

        <a title="@Title" href="@Model.Route_FieldManyRelation(ViewBag.ControllerName)">
            <span>
                @Models.Count @RelationType.GetFriendlyTypeName().Pluralize()
            </span>
        </a>
        }
    else
        {
        }
    }