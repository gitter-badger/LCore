@* Generator: MvcView *@

@using LCore;
@using MVCL;
@using MVCL.Models;
@using MVCL.Controllers;
@using MVCL.Context;
@using System.Collections;
@using System.Collections.Generic;
@using System.ComponentModel;
@using System.ComponentModel.Design;
@using System.Web;
@using System.Web.Mvc;
@using System.Linq;
@using System.Linq.Expressions;
@using System.ComponentModel.DataAnnotations;
@using System.ComponentModel.DataAnnotations.Schema;

@{
    String[,] TableData = (String[,])Model.PropertyData;
}

@model IViewField


<table class="string-matrix">
    @for (int i = 0; i < TableData.GetLength(0); i++)
        {
        if (i == 0)
            {
            @Html.Raw("<thead>");
            }

            <tr>
                @for (int j = 0; j < TableData.GetLength(1); j++)
                    {
                    <td>
                        @if (TableData[i, j].ToString().Length > ManageController.DefaultTableTextLength)
                            {
                            <span class="abbreviated" title="@Model.PropertyData">
                                @TableData[i, j].Substring(0, ManageController.DefaultTableTextLength) ...
                            </span>
                            }
                        else
                            {
                            <span>
                                @TableData[i, j]
                            </span>
                            }
                    </td>
                    }

            </tr>


        if (i == 0)
            {
            @Html.Raw("</thead>");
            }

        if (TableData.GetLength(0) == 1)
            {
            <tr>
                <td colspan="@TableData.GetLength(1)">
                    &nbsp;
                </td>
            </tr>
            }
        }
</table>