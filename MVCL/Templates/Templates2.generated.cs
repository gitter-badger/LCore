#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.Design;
    using System.IO;
    using System.Linq;
    using System.Linq.Expressions;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Mvc.Routing;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using LCore;
    using MVCL;
    using MVCL.Context;
    using MVCL.Controllers;
    using MVCL.Models;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Templates/Templates.html")]
    public partial class _Templates_Templates_html : System.Web.Mvc.WebViewPage<dynamic>
    {
        public _Templates_Templates_html()
        {
        }
        public override void Execute()
        {
WriteLiteral("\r\n\r\n\r\n<div");

WriteLiteral(" sing-template=\"Singularity\"");

WriteLiteral(">\r\n    <h1>&#8226; Singularity</h1>\r\n\r\n    <p");

WriteLiteral(" sing-if=\"{{sing.summary}}\"");

WriteLiteral(">{{sing.summary}}</p>\r\n    <p sing-else>No Summary</p>\r\n\r\n    <div");

WriteLiteral(" sing-loop=\"{{ module in sing.modules }}\"");

WriteLiteral(">\r\n        <div");

WriteLiteral(" sing-fill=\"{{ Module with module }}\"");

WriteLiteral("></div>\r\n        <hr />\r\n    </div>\r\n</div>\r\n\r\n<div");

WriteLiteral(" sing-template=\"Module\"");

WriteLiteral(">\r\n    <h2>{{module.name}}</h2>\r\n\r\n    <div>\r\n        Methods Implemented:\r\n     " +
"   <span");

WriteLiteral(" sing-if=\"{{module.methods}}\"");

WriteLiteral(" class=\"right\"");

WriteLiteral(">\r\n            {{module.implementedMethodCount()}}\r\n            /\r\n            {{" +
"module.methods.length}}\r\n\r\n            ({{module.implementedMethodCount().percen" +
"tOf(module.methods.length, 2)}}%)\r\n        </span>\r\n    </div>\r\n\r\n    <div");

WriteLiteral(" sing-if=\"{{module.requiredUnitTests}}\"");

WriteLiteral(">\r\n        <div>\r\n            Unit Tests Implemented:\r\n            <span");

WriteLiteral(" sing-if=\"{{module.methods}}\"");

WriteLiteral(" class=\"right\"");

WriteLiteral(@">
                {{module.implementedMethodTests()}}
                /
                {{module.methods.length}}

                ({{module.implementedMethodTests().percentOf(module.implementedMethodCount(), 2) }}%)
            </span>
        </div>
        <div>
            Unit Tests Passed:
            <span");

WriteLiteral(" sing-if=\"{{module.methods}}\"");

WriteLiteral(" class=\"right\"");

WriteLiteral(@">
                {{module.passedMethodTests()}}
                /
                {{module.methods.length}}

                ({{module.passedMethodTests().percentOf(module.implementedTestsCount()) }}%)
            </span>
        </div>

    </div>

    <div");

WriteLiteral(" sing-if=\"{{module.requiredDocumentation}}\"");

WriteLiteral(">\r\n        <div>\r\n            Documentation:\r\n            <span");

WriteLiteral(" sing-if=\"{{module.methods}}\"");

WriteLiteral(" class=\"right\"");

WriteLiteral(@">
                {{module.implementedDocumentation()}}
                /
                {{module.totalDocumentation()}}

                ({{module.implementedDocumentation().percentOf(module.totalDocumentation(), 2) }}%)
            </span>
        </div>
    </div>
    <div>
        Total:
        <span");

WriteLiteral(" sing-if=\"{{module.methods}}\"");

WriteLiteral(" class=\"right\"");

WriteLiteral(">\r\n            {{module.implementedItems()}}\r\n            /\r\n            {{module" +
".totalItems()}}\r\n\r\n            ({{module.implementedItems().percentOf(module.tot" +
"alItems(), 2) }}%)\r\n        </span>\r\n    </div>\r\n\r\n\r\n    <div");

WriteLiteral(" sing-loop=\"{{ method in module.methods }}\"");

WriteLiteral(">\r\n        <div");

WriteLiteral(" sing-fill=\"{{ Method with method }}\"");

WriteLiteral("></></div>\r\n    </div>\r\n\r\n</div>\r\n\r\n<div");

WriteLiteral(" sing-template=\"Method\"");

WriteLiteral(">\r\n    <div");

WriteLiteral(" sing-if=\"{{method.details.summary}}\"");

WriteLiteral(">\r\n        <h3>{{method.shortName}}</h3>\r\n\r\n        <p");

WriteLiteral(" sing-if=\"{{method.details.summary}}\"");

WriteLiteral(">\r\n            Summary: {{method.details.summary}}\r\n        </p>\r\n\r\n        <p");

WriteLiteral(" sing-if=\"{{method.details.parameters}}\"");

WriteLiteral(">\r\n            Parameters:\r\n            <ul>\r\n                <li");

WriteLiteral(" sing-loop=\"{{param in method.details.parameters}}\"");

WriteLiteral(">\r\n                    <div");

WriteLiteral(" sing-fill=\"{{Parameter with param}}\"");

WriteLiteral("></div>\r\n                </li>\r\n            </ul>\r\n        </p>\r\n\r\n        <p");

WriteLiteral(" sing-if=\"{{method.details.returnType}}\"");

WriteLiteral(">\r\n            Returns: {{sing.getTypeName(method.details.returnType)}}\r\n        " +
"</p>\r\n        <p sing-else>Returns: Nothing.</p>\r\n    </div>\r\n</div>\r\n\r\n<div");

WriteLiteral(" sing-template=\"Parameter\"");

WriteLiteral(">\r\n    <div>{{param.name}}</div>\r\n    <div>Type: {{sing.getTypeName(param.types)}" +
"}</div>\r\n    <div");

WriteLiteral(" sing-if=\"{{param.description}}\"");

WriteLiteral(">{{param.description}}</div>\r\n</div>");

        }
    }
}
#pragma warning restore 1591
