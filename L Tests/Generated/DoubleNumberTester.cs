// WARNING: this file was autogenerated by LUnit. Remove this line or move this file to prevent this file's contents from being overwritten.
using Xunit.Abstractions;
using LCore.LUnit;
using Xunit;
using System;
using LCore.Numbers;
namespace L_Tests.LCore.Numbers
{
    ///<summary>
    /// Covering class: LCore.Numbers.DoubleNumber
    ///
    ///LUnit has Autogenerated 8 method stubs:
    ///</summary>
    public partial class DoubleNumberTester
    {
        [Fact]
        [Trait(Traits.TargetMember,"LCore.Numbers.DoubleNumber.op_Implicit(Double) => DoubleNumber")]
        public void op_Implicit()
        {
            // TODO: Implement method test LCore.Numbers.DoubleNumber.op_Implicit
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Numbers)+ "." + nameof(DoubleNumber)+ "." + nameof(DoubleNumber.GetValuePrecision) + "() => Number")]
        public void GetValuePrecision()
        {
            // TODO: Implement method test LCore.Numbers.DoubleNumber.GetValuePrecision
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Numbers)+ "." + nameof(DoubleNumber)+ "." + nameof(DoubleNumber.Add) + "(Double, Double) => Double")]
        public void Add()
        {
            // TODO: Implement method test LCore.Numbers.DoubleNumber.Add
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Numbers)+ "." + nameof(DoubleNumber)+ "." + nameof(DoubleNumber.Subtract) + "(Double, Double) => Double")]
        public void Subtract()
        {
            // TODO: Implement method test LCore.Numbers.DoubleNumber.Subtract
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Numbers)+ "." + nameof(DoubleNumber)+ "." + nameof(DoubleNumber.Multiply) + "(Double, Double) => Double")]
        public void Multiply()
        {
            // TODO: Implement method test LCore.Numbers.DoubleNumber.Multiply
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Numbers)+ "." + nameof(DoubleNumber)+ "." + nameof(DoubleNumber.Divide) + "(Double, Double) => Object")]
        public void Divide()
        {
            // TODO: Implement method test LCore.Numbers.DoubleNumber.Divide
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Numbers)+ "." + nameof(DoubleNumber)+ "." + nameof(DoubleNumber.New) + "(Double) => Number<Double>")]
        public void New()
        {
            // TODO: Implement method test LCore.Numbers.DoubleNumber.New
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Numbers)+ "." + nameof(DoubleNumber)+ "." + nameof(DoubleNumber.ToString) + "() => String")]
        public new void ToString()
        {
            // TODO: Implement method test LCore.Numbers.DoubleNumber.ToString
        }

    }
}
