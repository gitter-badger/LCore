// WARNING: this file was autogenerated by LUnit. Remove this line or move this file to prevent this file's contents from being overwritten.
using Xunit.Abstractions;
using LCore.LUnit;
using Xunit;
using System;
using LCore.Extensions;
namespace L_Tests.LCore.Extensions
{
    ///<summary>
    /// Covering class: LCore.Extensions.L
    ///
    ///LUnit has Autogenerated 68 method stubs:
    ///</summary>
    public partial class LTester
    {
        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.F) + "(Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, U>) => Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, U>")]
        public void F()
        {
            // TODO: Implement method test LCore.Extensions.L.F
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.F) + "(Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, U>) => Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, U>")]
        public void F()
        {
            // TODO: Implement method test LCore.Extensions.L.F
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.F) + "(Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, U>) => Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, U>")]
        public void F()
        {
            // TODO: Implement method test LCore.Extensions.L.F
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.A) + "() => Action")]
        public void A()
        {
            // TODO: Implement method test LCore.Extensions.L.A
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.A) + "() => Action<T1>")]
        public void A()
        {
            // TODO: Implement method test LCore.Extensions.L.A
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.A) + "() => Action<T1, T2>")]
        public void A()
        {
            // TODO: Implement method test LCore.Extensions.L.A
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.A) + "() => Action<T1, T2, T3>")]
        public void A()
        {
            // TODO: Implement method test LCore.Extensions.L.A
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.A) + "() => Action<T1, T2, T3, T4>")]
        public void A()
        {
            // TODO: Implement method test LCore.Extensions.L.A
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.A) + "() => Action<T1, T2, T3, T4, T5>")]
        public void A()
        {
            // TODO: Implement method test LCore.Extensions.L.A
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.A) + "() => Action<T1, T2, T3, T4, T5, T6>")]
        public void A()
        {
            // TODO: Implement method test LCore.Extensions.L.A
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.A) + "() => Action<T1, T2, T3, T4, T5, T6, T7>")]
        public void A()
        {
            // TODO: Implement method test LCore.Extensions.L.A
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.A) + "() => Action<T1, T2, T3, T4, T5, T6, T7, T8>")]
        public void A()
        {
            // TODO: Implement method test LCore.Extensions.L.A
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.A) + "() => Action<T1, T2, T3, T4, T5, T6, T7, T8, T9>")]
        public void A()
        {
            // TODO: Implement method test LCore.Extensions.L.A
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.A) + "() => Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>")]
        public void A()
        {
            // TODO: Implement method test LCore.Extensions.L.A
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.A) + "() => Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>")]
        public void A()
        {
            // TODO: Implement method test LCore.Extensions.L.A
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.A) + "() => Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>")]
        public void A()
        {
            // TODO: Implement method test LCore.Extensions.L.A
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.A) + "() => Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>")]
        public void A()
        {
            // TODO: Implement method test LCore.Extensions.L.A
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.A) + "() => Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>")]
        public void A()
        {
            // TODO: Implement method test LCore.Extensions.L.A
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.A) + "() => Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>")]
        public void A()
        {
            // TODO: Implement method test LCore.Extensions.L.A
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.A) + "() => Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>")]
        public void A()
        {
            // TODO: Implement method test LCore.Extensions.L.A
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.F) + "() => Func<U>")]
        public void F()
        {
            // TODO: Implement method test LCore.Extensions.L.F
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.F) + "() => Func<T1, U>")]
        public void F()
        {
            // TODO: Implement method test LCore.Extensions.L.F
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.F) + "() => Func<T1, T2, U>")]
        public void F()
        {
            // TODO: Implement method test LCore.Extensions.L.F
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.F) + "() => Func<T1, T2, T3, U>")]
        public void F()
        {
            // TODO: Implement method test LCore.Extensions.L.F
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.F) + "() => Func<T1, T2, T3, T4, U>")]
        public void F()
        {
            // TODO: Implement method test LCore.Extensions.L.F
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.F) + "() => Func<T1, T2, T3, T4, T5, U>")]
        public void F()
        {
            // TODO: Implement method test LCore.Extensions.L.F
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.F) + "() => Func<T1, T2, T3, T4, T5, T6, U>")]
        public void F()
        {
            // TODO: Implement method test LCore.Extensions.L.F
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.F) + "() => Func<T1, T2, T3, T4, T5, T6, T7, U>")]
        public void F()
        {
            // TODO: Implement method test LCore.Extensions.L.F
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.F) + "() => Func<T1, T2, T3, T4, T5, T6, T7, T8, U>")]
        public void F()
        {
            // TODO: Implement method test LCore.Extensions.L.F
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.F) + "() => Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, U>")]
        public void F()
        {
            // TODO: Implement method test LCore.Extensions.L.F
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.F) + "() => Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, U>")]
        public void F()
        {
            // TODO: Implement method test LCore.Extensions.L.F
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.F) + "() => Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, U>")]
        public void F()
        {
            // TODO: Implement method test LCore.Extensions.L.F
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.F) + "() => Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, U>")]
        public void F()
        {
            // TODO: Implement method test LCore.Extensions.L.F
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.F) + "() => Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, U>")]
        public void F()
        {
            // TODO: Implement method test LCore.Extensions.L.F
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.F) + "() => Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, U>")]
        public void F()
        {
            // TODO: Implement method test LCore.Extensions.L.F
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.F) + "() => Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, U>")]
        public void F()
        {
            // TODO: Implement method test LCore.Extensions.L.F
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.F) + "() => Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, U>")]
        public void F()
        {
            // TODO: Implement method test LCore.Extensions.L.F
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.A) + "(Action) => Action")]
        public void A()
        {
            // TODO: Implement method test LCore.Extensions.L.A
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.A) + "(Action<T1>) => Action<T1>")]
        public void A()
        {
            // TODO: Implement method test LCore.Extensions.L.A
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.A) + "(Action<T1, T2>) => Action<T1, T2>")]
        public void A()
        {
            // TODO: Implement method test LCore.Extensions.L.A
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.A) + "(Action<T1, T2, T3>) => Action<T1, T2, T3>")]
        public void A()
        {
            // TODO: Implement method test LCore.Extensions.L.A
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.A) + "(Action<T1, T2, T3, T4>) => Action<T1, T2, T3, T4>")]
        public void A()
        {
            // TODO: Implement method test LCore.Extensions.L.A
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.A) + "(Action<T1, T2, T3, T4, T5>) => Action<T1, T2, T3, T4, T5>")]
        public void A()
        {
            // TODO: Implement method test LCore.Extensions.L.A
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.A) + "(Action<T1, T2, T3, T4, T5, T6>) => Action<T1, T2, T3, T4, T5, T6>")]
        public void A()
        {
            // TODO: Implement method test LCore.Extensions.L.A
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.A) + "(Action<T1, T2, T3, T4, T5, T6, T7>) => Action<T1, T2, T3, T4, T5, T6, T7>")]
        public void A()
        {
            // TODO: Implement method test LCore.Extensions.L.A
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.A) + "(Action<T1, T2, T3, T4, T5, T6, T7, T8>) => Action<T1, T2, T3, T4, T5, T6, T7, T8>")]
        public void A()
        {
            // TODO: Implement method test LCore.Extensions.L.A
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.A) + "(Action<T1, T2, T3, T4, T5, T6, T7, T8, T9>) => Action<T1, T2, T3, T4, T5, T6, T7, T8, T9>")]
        public void A()
        {
            // TODO: Implement method test LCore.Extensions.L.A
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.A) + "(Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>) => Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>")]
        public void A()
        {
            // TODO: Implement method test LCore.Extensions.L.A
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.A) + "(Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>) => Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>")]
        public void A()
        {
            // TODO: Implement method test LCore.Extensions.L.A
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.A) + "(Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>) => Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>")]
        public void A()
        {
            // TODO: Implement method test LCore.Extensions.L.A
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.A) + "(Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>) => Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>")]
        public void A()
        {
            // TODO: Implement method test LCore.Extensions.L.A
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.A) + "(Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>) => Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>")]
        public void A()
        {
            // TODO: Implement method test LCore.Extensions.L.A
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.A) + "(Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>) => Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>")]
        public void A()
        {
            // TODO: Implement method test LCore.Extensions.L.A
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.A) + "(Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>) => Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>")]
        public void A()
        {
            // TODO: Implement method test LCore.Extensions.L.A
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.F) + "(Func<U>) => Func<U>")]
        public void F()
        {
            // TODO: Implement method test LCore.Extensions.L.F
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.F) + "(Func<T1, U>) => Func<T1, U>")]
        public void F()
        {
            // TODO: Implement method test LCore.Extensions.L.F
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.F) + "(Func<T1, T2, U>) => Func<T1, T2, U>")]
        public void F()
        {
            // TODO: Implement method test LCore.Extensions.L.F
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.F) + "(Func<T1, T2, T3, U>) => Func<T1, T2, T3, U>")]
        public void F()
        {
            // TODO: Implement method test LCore.Extensions.L.F
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.F) + "(Func<T1, T2, T3, T4, U>) => Func<T1, T2, T3, T4, U>")]
        public void F()
        {
            // TODO: Implement method test LCore.Extensions.L.F
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.F) + "(Func<T1, T2, T3, T4, T5, U>) => Func<T1, T2, T3, T4, T5, U>")]
        public void F()
        {
            // TODO: Implement method test LCore.Extensions.L.F
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.F) + "(Func<T1, T2, T3, T4, T5, T6, U>) => Func<T1, T2, T3, T4, T5, T6, U>")]
        public void F()
        {
            // TODO: Implement method test LCore.Extensions.L.F
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.F) + "(Func<T1, T2, T3, T4, T5, T6, T7, U>) => Func<T1, T2, T3, T4, T5, T6, T7, U>")]
        public void F()
        {
            // TODO: Implement method test LCore.Extensions.L.F
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.F) + "(Func<T1, T2, T3, T4, T5, T6, T7, T8, U>) => Func<T1, T2, T3, T4, T5, T6, T7, T8, U>")]
        public void F()
        {
            // TODO: Implement method test LCore.Extensions.L.F
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.F) + "(Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, U>) => Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, U>")]
        public void F()
        {
            // TODO: Implement method test LCore.Extensions.L.F
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.F) + "(Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, U>) => Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, U>")]
        public void F()
        {
            // TODO: Implement method test LCore.Extensions.L.F
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.F) + "(Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, U>) => Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, U>")]
        public void F()
        {
            // TODO: Implement method test LCore.Extensions.L.F
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.F) + "(Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, U>) => Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, U>")]
        public void F()
        {
            // TODO: Implement method test LCore.Extensions.L.F
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(L)+ "." + nameof(L.F) + "(Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, U>) => Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, U>")]
        public void F()
        {
            // TODO: Implement method test LCore.Extensions.L.F
        }

    }
}
