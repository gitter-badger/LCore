// WARNING: this file was autogenerated by LUnit. Remove this line or move this file to prevent this file's contents from being overwritten.
using Xunit.Abstractions;
using LCore.LUnit;
using Xunit;
using System;
using LCore.Numbers;
namespace L_Tests.LCore.Numbers
{
    ///<summary>
    /// Covering class: LCore.Numbers.DecimalNumber
    ///
    ///LUnit has Autogenerated 8 method stubs:
    ///</summary>
    public partial class DecimalNumberTester
    {
        [Fact]
        [Trait(Traits.TargetMember,"LCore.Numbers.DecimalNumber.op_Implicit(Decimal) => DecimalNumber")]
        public void op_Implicit()
        {
            // TODO: Implement method test LCore.Numbers.DecimalNumber.op_Implicit
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Numbers)+ "." + nameof(DecimalNumber)+ "." + nameof(DecimalNumber.GetValuePrecision) + "() => Number")]
        public void GetValuePrecision()
        {
            // TODO: Implement method test LCore.Numbers.DecimalNumber.GetValuePrecision
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Numbers)+ "." + nameof(DecimalNumber)+ "." + nameof(DecimalNumber.Add) + "(Decimal, Decimal) => Decimal")]
        public void Add()
        {
            // TODO: Implement method test LCore.Numbers.DecimalNumber.Add
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Numbers)+ "." + nameof(DecimalNumber)+ "." + nameof(DecimalNumber.Subtract) + "(Decimal, Decimal) => Decimal")]
        public void Subtract()
        {
            // TODO: Implement method test LCore.Numbers.DecimalNumber.Subtract
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Numbers)+ "." + nameof(DecimalNumber)+ "." + nameof(DecimalNumber.Multiply) + "(Decimal, Decimal) => Decimal")]
        public void Multiply()
        {
            // TODO: Implement method test LCore.Numbers.DecimalNumber.Multiply
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Numbers)+ "." + nameof(DecimalNumber)+ "." + nameof(DecimalNumber.Divide) + "(Decimal, Decimal) => Object")]
        public void Divide()
        {
            // TODO: Implement method test LCore.Numbers.DecimalNumber.Divide
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Numbers)+ "." + nameof(DecimalNumber)+ "." + nameof(DecimalNumber.New) + "(Decimal) => Number<Decimal>")]
        public void New()
        {
            // TODO: Implement method test LCore.Numbers.DecimalNumber.New
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Numbers)+ "." + nameof(DecimalNumber)+ "." + nameof(DecimalNumber.ToString) + "() => String")]
        public new void ToString()
        {
            // TODO: Implement method test LCore.Numbers.DecimalNumber.ToString
        }

    }
}
