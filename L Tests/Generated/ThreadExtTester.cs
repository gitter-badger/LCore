// WARNING: this file was autogenerated by LUnit. Remove this line or move this file to prevent this file's contents from being overwritten.
using Xunit.Abstractions;
using LCore.LUnit;
using Xunit;
using System;
using LCore.Extensions;
namespace L_Tests.LCore.Extensions
{
    ///<summary>
    /// Covering class: LCore.Extensions.ThreadExt
    ///
    ///LUnit has Autogenerated 35 method stubs:
    ///</summary>
    public partial class ThreadExtTester : XUnitOutputTester, IDisposable
    {
        public ThreadExtTester([NotNull] ITestOutputHelper Output) : base(Output) { }

        public void Dispose() { }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(ThreadExt)+ "." + nameof(ThreadExt.Async) + "(Action) => Action")]
        public void Async()
        {
            // TODO: Implement method test LCore.Extensions.ThreadExt.Async
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(ThreadExt)+ "." + nameof(ThreadExt.Async) + "(Action<T>) => Action<T>")]
        public void Async()
        {
            // TODO: Implement method test LCore.Extensions.ThreadExt.Async
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(ThreadExt)+ "." + nameof(ThreadExt.Async) + "(Action, ThreadPriority) => Action")]
        public void Async()
        {
            // TODO: Implement method test LCore.Extensions.ThreadExt.Async
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(ThreadExt)+ "." + nameof(ThreadExt.Async) + "(Action<T>, ThreadPriority) => Action<T>")]
        public void Async()
        {
            // TODO: Implement method test LCore.Extensions.ThreadExt.Async
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(ThreadExt)+ "." + nameof(ThreadExt.Async) + "(Action, TimeSpan, ThreadPriority) => Action")]
        public void Async()
        {
            // TODO: Implement method test LCore.Extensions.ThreadExt.Async
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(ThreadExt)+ "." + nameof(ThreadExt.Async) + "(Action<T>, TimeSpan, ThreadPriority) => Action<T>")]
        public void Async()
        {
            // TODO: Implement method test LCore.Extensions.ThreadExt.Async
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(ThreadExt)+ "." + nameof(ThreadExt.Async) + "(Action, Int32, ThreadPriority) => Action")]
        public void Async()
        {
            // TODO: Implement method test LCore.Extensions.ThreadExt.Async
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(ThreadExt)+ "." + nameof(ThreadExt.Async) + "(Action<T>, Int32, ThreadPriority) => Action<T>")]
        public void Async()
        {
            // TODO: Implement method test LCore.Extensions.ThreadExt.Async
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(ThreadExt)+ "." + nameof(ThreadExt.Async) + "(Action, UInt32, ThreadPriority) => Action")]
        public void Async()
        {
            // TODO: Implement method test LCore.Extensions.ThreadExt.Async
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(ThreadExt)+ "." + nameof(ThreadExt.Async) + "(Action<T>, UInt32, ThreadPriority) => Action<T>")]
        public void Async()
        {
            // TODO: Implement method test LCore.Extensions.ThreadExt.Async
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(ThreadExt)+ "." + nameof(ThreadExt.Async) + "(Action, Int64, ThreadPriority) => Action")]
        public void Async()
        {
            // TODO: Implement method test LCore.Extensions.ThreadExt.Async
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(ThreadExt)+ "." + nameof(ThreadExt.Async) + "(Action<T>, Int64, ThreadPriority) => Action<T>")]
        public void Async()
        {
            // TODO: Implement method test LCore.Extensions.ThreadExt.Async
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(ThreadExt)+ "." + nameof(ThreadExt.Async) + "(Action, UInt64, ThreadPriority) => Action")]
        public void Async()
        {
            // TODO: Implement method test LCore.Extensions.ThreadExt.Async
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(ThreadExt)+ "." + nameof(ThreadExt.Async) + "(Action<T>, UInt64, ThreadPriority) => Action<T>")]
        public void Async()
        {
            // TODO: Implement method test LCore.Extensions.ThreadExt.Async
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(ThreadExt)+ "." + nameof(ThreadExt.AsyncResult) + "(Func<U>, Action<U>) => Action")]
        public void AsyncResult()
        {
            // TODO: Implement method test LCore.Extensions.ThreadExt.AsyncResult
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(ThreadExt)+ "." + nameof(ThreadExt.AsyncResult) + "(Func<T1, U>, Action<U>) => Action<T1>")]
        public void AsyncResult()
        {
            // TODO: Implement method test LCore.Extensions.ThreadExt.AsyncResult
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(ThreadExt)+ "." + nameof(ThreadExt.AsyncResult) + "(Func<U>, Action<U>, ThreadPriority) => Action")]
        public void AsyncResult()
        {
            // TODO: Implement method test LCore.Extensions.ThreadExt.AsyncResult
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(ThreadExt)+ "." + nameof(ThreadExt.AsyncResult) + "(Func<T1, U>, Action<U>, ThreadPriority) => Action<T1>")]
        public void AsyncResult()
        {
            // TODO: Implement method test LCore.Extensions.ThreadExt.AsyncResult
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(ThreadExt)+ "." + nameof(ThreadExt.AsyncResult) + "(Func<U>, Action<U>, TimeSpan, ThreadPriority) => Action")]
        public void AsyncResult()
        {
            // TODO: Implement method test LCore.Extensions.ThreadExt.AsyncResult
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(ThreadExt)+ "." + nameof(ThreadExt.AsyncResult) + "(Func<T1, U>, Action<U>, TimeSpan, ThreadPriority) => Action<T1>")]
        public void AsyncResult()
        {
            // TODO: Implement method test LCore.Extensions.ThreadExt.AsyncResult
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(ThreadExt)+ "." + nameof(ThreadExt.AsyncResult) + "(Func<U>, Action<U>, Int32, ThreadPriority) => Action")]
        public void AsyncResult()
        {
            // TODO: Implement method test LCore.Extensions.ThreadExt.AsyncResult
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(ThreadExt)+ "." + nameof(ThreadExt.AsyncResult) + "(Func<T1, U>, Action<U>, Int32, ThreadPriority) => Action<T1>")]
        public void AsyncResult()
        {
            // TODO: Implement method test LCore.Extensions.ThreadExt.AsyncResult
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(ThreadExt)+ "." + nameof(ThreadExt.AsyncResult) + "(Func<U>, Action<U>, UInt32, ThreadPriority) => Action")]
        public void AsyncResult()
        {
            // TODO: Implement method test LCore.Extensions.ThreadExt.AsyncResult
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(ThreadExt)+ "." + nameof(ThreadExt.AsyncResult) + "(Func<T1, U>, Action<U>, UInt32, ThreadPriority) => Action<T1>")]
        public void AsyncResult()
        {
            // TODO: Implement method test LCore.Extensions.ThreadExt.AsyncResult
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(ThreadExt)+ "." + nameof(ThreadExt.AsyncResult) + "(Func<U>, Action<U>, Int64, ThreadPriority) => Action")]
        public void AsyncResult()
        {
            // TODO: Implement method test LCore.Extensions.ThreadExt.AsyncResult
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(ThreadExt)+ "." + nameof(ThreadExt.AsyncResult) + "(Func<T1, U>, Action<U>, Int64, ThreadPriority) => Action<T1>")]
        public void AsyncResult()
        {
            // TODO: Implement method test LCore.Extensions.ThreadExt.AsyncResult
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(ThreadExt)+ "." + nameof(ThreadExt.AsyncResult) + "(Func<U>, Action<U>, UInt64, ThreadPriority) => Action")]
        public void AsyncResult()
        {
            // TODO: Implement method test LCore.Extensions.ThreadExt.AsyncResult
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(ThreadExt)+ "." + nameof(ThreadExt.AsyncResult) + "(Func<T1, U>, Action<U>, UInt64, ThreadPriority) => Action<T1>")]
        public void AsyncResult()
        {
            // TODO: Implement method test LCore.Extensions.ThreadExt.AsyncResult
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(ThreadExt)+ "." + nameof(ThreadExt.CountExecutions) + "(Action, UInt32) => UInt32")]
        public void CountExecutions()
        {
            // TODO: Implement method test LCore.Extensions.ThreadExt.CountExecutions
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(ThreadExt)+ "." + nameof(ThreadExt.Profile) + "(Action, UInt32) => TimeSpan")]
        public void Profile()
        {
            // TODO: Implement method test LCore.Extensions.ThreadExt.Profile
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(ThreadExt)+ "." + nameof(ThreadExt.Profile) + "(Func<U>, UInt32) => MethodProfileData<U>")]
        public void Profile()
        {
            // TODO: Implement method test LCore.Extensions.ThreadExt.Profile
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(ThreadExt)+ "." + nameof(ThreadExt.Profile) + "(Action, String) => Action")]
        public void Profile()
        {
            // TODO: Implement method test LCore.Extensions.ThreadExt.Profile
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(ThreadExt)+ "." + nameof(ThreadExt.Profile) + "(Action<T1>, String) => Action<T1>")]
        public void Profile()
        {
            // TODO: Implement method test LCore.Extensions.ThreadExt.Profile
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(ThreadExt)+ "." + nameof(ThreadExt.Profile) + "(Func<U>, String) => Func<U>")]
        public void Profile()
        {
            // TODO: Implement method test LCore.Extensions.ThreadExt.Profile
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(ThreadExt)+ "." + nameof(ThreadExt.Profile) + "(Func<T1, U>, String) => Func<T1, U>")]
        public void Profile()
        {
            // TODO: Implement method test LCore.Extensions.ThreadExt.Profile
        }

    }
}
