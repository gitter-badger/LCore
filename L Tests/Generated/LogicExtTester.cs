// WARNING: this file was autogenerated by LUnit. Remove this line or move this file to prevent this file's contents from being overwritten.
using Xunit.Abstractions;
using LCore.LUnit;
using Xunit;
using System;
using LCore.Extensions;
namespace L_Tests.LCore.Extensions
{
    ///<summary>
    /// Covering class: LCore.Extensions.LogicExt
    ///
    ///LUnit has Autogenerated 129 method stubs:
    ///</summary>
    public partial class LogicExtTester
    {
        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Cast) + "(Func<T1, T2, T3, T4, U1>) => Func<T5, T6, T7, T8, U2>")]
        public void Cast()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Cast
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose) + "(Func<T2, T3, T4, T5, T1>, Action<T1>) => Action<T2, T3, T4, T5>")]
        public void Enclose()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose) + "(Func<T1>, Action<T1, T2>) => Action<T2>")]
        public void Enclose()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose2) + "(Func<T2>, Action<T1, T2>) => Action<T1>")]
        public void Enclose2()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose2
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose) + "(Func<T3, T1>, Action<T1, T2>) => Action<T2, T3>")]
        public void Enclose()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose2) + "(Func<T3, T2>, Action<T1, T2>) => Action<T1, T3>")]
        public void Enclose2()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose2
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose) + "(Func<T3, T4, T1>, Action<T1, T2>) => Action<T2, T3, T4>")]
        public void Enclose()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose2) + "(Func<T3, T4, T2>, Action<T1, T2>) => Action<T1, T3, T4>")]
        public void Enclose2()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose2
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose) + "(Func<T3, T4, T5, T1>, Action<T1, T2>) => Action<T2, T3, T4, T5>")]
        public void Enclose()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose2) + "(Func<T3, T4, T5, T2>, Action<T1, T2>) => Action<T1, T3, T4, T5>")]
        public void Enclose2()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose2
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose) + "(Func<T1>, Action<T1, T2, T3>) => Action<T2, T3>")]
        public void Enclose()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose2) + "(Func<T2>, Action<T1, T2, T3>) => Action<T1, T3>")]
        public void Enclose2()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose2
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose3) + "(Func<T3>, Action<T1, T2, T3>) => Action<T1, T2>")]
        public void Enclose3()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose3
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose) + "(Func<T4, T1>, Action<T1, T2, T3>) => Action<T2, T3, T4>")]
        public void Enclose()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose2) + "(Func<T4, T2>, Action<T1, T2, T3>) => Action<T1, T3, T4>")]
        public void Enclose2()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose2
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose3) + "(Func<T4, T3>, Action<T1, T2, T3>) => Action<T1, T2, T4>")]
        public void Enclose3()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose3
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose) + "(Func<T4, T5, T1>, Action<T1, T2, T3>) => Action<T2, T3, T4, T5>")]
        public void Enclose()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose2) + "(Func<T4, T5, T2>, Action<T1, T2, T3>) => Action<T1, T3, T4, T5>")]
        public void Enclose2()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose2
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose3) + "(Func<T4, T5, T3>, Action<T1, T2, T3>) => Action<T1, T2, T4, T5>")]
        public void Enclose3()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose3
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose) + "(Func<T1>, Action<T1, T2, T3, T4>) => Action<T2, T3, T4>")]
        public void Enclose()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose2) + "(Func<T2>, Action<T1, T2, T3, T4>) => Action<T1, T3, T4>")]
        public void Enclose2()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose2
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose3) + "(Func<T3>, Action<T1, T2, T3, T4>) => Action<T1, T2, T4>")]
        public void Enclose3()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose3
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose4) + "(Func<T4>, Action<T1, T2, T3, T4>) => Action<T1, T2, T3>")]
        public void Enclose4()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose4
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose) + "(Func<T5, T1>, Action<T1, T2, T3, T4>) => Action<T2, T3, T4, T5>")]
        public void Enclose()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose2) + "(Func<T5, T2>, Action<T1, T2, T3, T4>) => Action<T1, T3, T4, T5>")]
        public void Enclose2()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose2
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose3) + "(Func<T5, T3>, Action<T1, T2, T3, T4>) => Action<T1, T2, T4, T5>")]
        public void Enclose3()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose3
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose4) + "(Func<T5, T4>, Action<T1, T2, T3, T4>) => Action<T1, T2, T3, T5>")]
        public void Enclose4()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose4
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose) + "(Func<T1>, Func<T1, U>) => Func<U>")]
        public void Enclose()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose) + "(Func<T1, T2>, Func<T2, U>) => Func<T1, U>")]
        public void Enclose()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose) + "(Func<T1, T2, T3>, Func<T3, U>) => Func<T1, T2, U>")]
        public void Enclose()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose) + "(Func<T1, T2, T3, T4>, Func<T4, U>) => Func<T1, T2, T3, U>")]
        public void Enclose()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose) + "(Func<T1, T2, T3, T4, T5>, Func<T5, U>) => Func<T1, T2, T3, T4, U>")]
        public void Enclose()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose) + "(Func<T1>, Func<T1, T2, U>) => Func<T2, U>")]
        public void Enclose()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose2) + "(Func<T2>, Func<T1, T2, U>) => Func<T1, U>")]
        public void Enclose2()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose2
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose) + "(Func<T3, T1>, Func<T1, T2, U>) => Func<T2, T3, U>")]
        public void Enclose()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose2) + "(Func<T3, T2>, Func<T1, T2, U>) => Func<T1, T3, U>")]
        public void Enclose2()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose2
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose) + "(Func<T3, T4, T1>, Func<T1, T2, U>) => Func<T2, T3, T4, U>")]
        public void Enclose()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose2) + "(Func<T3, T4, T2>, Func<T1, T2, U>) => Func<T1, T3, T4, U>")]
        public void Enclose2()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose2
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose) + "(Func<T3, T4, T5, T1>, Func<T1, T2, U>) => Func<T2, T3, T4, T5, U>")]
        public void Enclose()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose2) + "(Func<T3, T4, T5, T2>, Func<T1, T2, U>) => Func<T1, T3, T4, T5, U>")]
        public void Enclose2()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose2
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose) + "(Func<T1>, Func<T1, T2, T3, U>) => Func<T2, T3, U>")]
        public void Enclose()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose2) + "(Func<T2>, Func<T1, T2, T3, U>) => Func<T1, T3, U>")]
        public void Enclose2()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose2
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose3) + "(Func<T3>, Func<T1, T2, T3, U>) => Func<T1, T2, U>")]
        public void Enclose3()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose3
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose) + "(Func<T4, T1>, Func<T1, T2, T3, U>) => Func<T2, T3, T4, U>")]
        public void Enclose()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose2) + "(Func<T4, T2>, Func<T1, T2, T3, U>) => Func<T1, T3, T4, U>")]
        public void Enclose2()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose2
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose3) + "(Func<T4, T3>, Func<T1, T2, T3, U>) => Func<T1, T2, T4, U>")]
        public void Enclose3()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose3
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose) + "(Func<T4, T5, T1>, Func<T1, T2, T3, U>) => Func<T2, T3, T4, T5, U>")]
        public void Enclose()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose2) + "(Func<T4, T5, T2>, Func<T1, T2, T3, U>) => Func<T1, T3, T4, T5, U>")]
        public void Enclose2()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose2
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose3) + "(Func<T4, T5, T3>, Func<T1, T2, T3, U>) => Func<T1, T2, T4, T5, U>")]
        public void Enclose3()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose3
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose) + "(Func<T1>, Func<T1, T2, T3, T4, U>) => Func<T2, T3, T4, U>")]
        public void Enclose()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose2) + "(Func<T2>, Func<T1, T2, T3, T4, U>) => Func<T1, T3, T4, U>")]
        public void Enclose2()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose2
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose3) + "(Func<T3>, Func<T1, T2, T3, T4, U>) => Func<T1, T2, T4, U>")]
        public void Enclose3()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose3
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose4) + "(Func<T4>, Func<T1, T2, T3, T4, U>) => Func<T1, T2, T3, U>")]
        public void Enclose4()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose4
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose) + "(Func<T5, T1>, Func<T1, T2, T3, T4, U>) => Func<T2, T3, T4, T5, U>")]
        public void Enclose()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose2) + "(Func<T5, T2>, Func<T1, T2, T3, T4, U>) => Func<T1, T3, T4, T5, U>")]
        public void Enclose2()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose2
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose3) + "(Func<T5, T3>, Func<T1, T2, T3, T4, U>) => Func<T1, T2, T4, T5, U>")]
        public void Enclose3()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose3
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose4) + "(Func<T5, T4>, Func<T1, T2, T3, T4, U>) => Func<T1, T2, T3, T5, U>")]
        public void Enclose4()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose4
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Cast) + "(Action<T1>) => Action<U1>")]
        public void Cast()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Cast
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Cast) + "(Action<T1, T2>) => Action<U1, U2>")]
        public void Cast()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Cast
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Cast) + "(Action<T1, T2, T3>) => Action<U1, U2, U3>")]
        public void Cast()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Cast
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Cast) + "(Action<T1, T2, T3, T4>) => Action<U1, U2, U3, U4>")]
        public void Cast()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Cast
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Cast) + "(Func<U1>) => Func<U2>")]
        public void Cast()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Cast
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Cast) + "(Func<T1, U1>) => Func<T2, U2>")]
        public void Cast()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Cast
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Cast) + "(Func<T1, T2, U1>) => Func<T3, T4, U2>")]
        public void Cast()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Cast
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Cast) + "(Func<T1, T2, T3, U1>) => Func<T4, T5, T6, U2>")]
        public void Cast()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Cast
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround) + "(Action<U>, Func<U>) => Action")]
        public void Surround()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround) + "(Action<U>, Func<T1, U>) => Action<T1>")]
        public void Surround()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround) + "(Action<U>, Func<T1, T2, U>) => Action<T1, T2>")]
        public void Surround()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround) + "(Action<U>, Func<T1, T2, T3, U>) => Action<T1, T2, T3>")]
        public void Surround()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround) + "(Action<U>, Func<T1, T2, T3, T4, U>) => Action<T1, T2, T3, T4>")]
        public void Surround()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround) + "(Action<T1, T2>, Func<T1>) => Action<T2>")]
        public void Surround()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround2) + "(Action<T1, T2>, Func<T2>) => Action<T1>")]
        public void Surround2()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround2
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround) + "(Action<T1, T2>, Func<T3, T1>) => Action<T2, T3>")]
        public void Surround()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround2) + "(Action<T1, T2>, Func<T3, T2>) => Action<T1, T3>")]
        public void Surround2()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround2
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround) + "(Action<T1, T2>, Func<T3, T4, T1>) => Action<T2, T3, T4>")]
        public void Surround()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround2) + "(Action<T1, T2>, Func<T3, T4, T2>) => Action<T1, T3, T4>")]
        public void Surround2()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround2
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround) + "(Action<T1, T2>, Func<T3, T4, T5, T1>) => Action<T2, T3, T4, T5>")]
        public void Surround()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround2) + "(Action<T1, T2>, Func<T3, T4, T5, T2>) => Action<T1, T3, T4, T5>")]
        public void Surround2()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround2
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround) + "(Action<T1, T2, T3>, Func<T1>) => Action<T2, T3>")]
        public void Surround()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround2) + "(Action<T1, T2, T3>, Func<T2>) => Action<T1, T3>")]
        public void Surround2()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround2
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround3) + "(Action<T1, T2, T3>, Func<T3>) => Action<T1, T2>")]
        public void Surround3()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround3
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround) + "(Action<T1, T2, T3>, Func<T4, T1>) => Action<T2, T3, T4>")]
        public void Surround()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround2) + "(Action<T1, T2, T3>, Func<T4, T2>) => Action<T1, T3, T4>")]
        public void Surround2()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround2
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround3) + "(Action<T1, T2, T3>, Func<T4, T3>) => Action<T1, T2, T4>")]
        public void Surround3()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround3
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround) + "(Action<T1, T2, T3>, Func<T4, T5, T1>) => Action<T2, T3, T4, T5>")]
        public void Surround()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround2) + "(Action<T1, T2, T3>, Func<T4, T5, T2>) => Action<T1, T3, T4, T5>")]
        public void Surround2()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround2
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround3) + "(Action<T1, T2, T3>, Func<T4, T5, T3>) => Action<T1, T2, T4, T5>")]
        public void Surround3()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround3
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround) + "(Action<T1, T2, T3, T4>, Func<T1>) => Action<T2, T3, T4>")]
        public void Surround()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround2) + "(Action<T1, T2, T3, T4>, Func<T2>) => Action<T1, T3, T4>")]
        public void Surround2()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround2
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround3) + "(Action<T1, T2, T3, T4>, Func<T3>) => Action<T1, T2, T4>")]
        public void Surround3()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround3
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround4) + "(Action<T1, T2, T3, T4>, Func<T4>) => Action<T1, T2, T3>")]
        public void Surround4()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround4
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround) + "(Action<T1, T2, T3, T4>, Func<T5, T1>) => Action<T2, T3, T4, T5>")]
        public void Surround()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround2) + "(Action<T1, T2, T3, T4>, Func<T5, T2>) => Action<T1, T3, T4, T5>")]
        public void Surround2()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround2
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround3) + "(Action<T1, T2, T3, T4>, Func<T5, T3>) => Action<T1, T2, T4, T5>")]
        public void Surround3()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround3
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround4) + "(Action<T1, T2, T3, T4>, Func<T5, T4>) => Action<T1, T2, T3, T5>")]
        public void Surround4()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround4
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround) + "(Func<T1, U>, Func<T1>) => Func<U>")]
        public void Surround()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround) + "(Func<T2, U>, Func<T1, T2>) => Func<T1, U>")]
        public void Surround()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround) + "(Func<T3, U>, Func<T1, T2, T3>) => Func<T1, T2, U>")]
        public void Surround()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround) + "(Func<T4, U>, Func<T1, T2, T3, T4>) => Func<T1, T2, T3, U>")]
        public void Surround()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround) + "(Func<T5, U>, Func<T1, T2, T3, T4, T5>) => Func<T1, T2, T3, T4, U>")]
        public void Surround()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround) + "(Func<T1, T2, U>, Func<T1>) => Func<T2, U>")]
        public void Surround()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround2) + "(Func<T1, T2, U>, Func<T2>) => Func<T1, U>")]
        public void Surround2()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround2
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround) + "(Func<T1, T2, U>, Func<T3, T1>) => Func<T2, T3, U>")]
        public void Surround()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround2) + "(Func<T1, T2, U>, Func<T3, T2>) => Func<T1, T3, U>")]
        public void Surround2()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround2
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround) + "(Func<T1, T2, U>, Func<T3, T4, T1>) => Func<T2, T3, T4, U>")]
        public void Surround()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround2) + "(Func<T1, T2, U>, Func<T3, T4, T2>) => Func<T1, T3, T4, U>")]
        public void Surround2()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround2
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround) + "(Func<T1, T2, U>, Func<T3, T4, T5, T1>) => Func<T2, T3, T4, T5, U>")]
        public void Surround()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround2) + "(Func<T1, T2, U>, Func<T3, T4, T5, T2>) => Func<T1, T3, T4, T5, U>")]
        public void Surround2()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround2
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround) + "(Func<T1, T2, T3, U>, Func<T1>) => Func<T2, T3, U>")]
        public void Surround()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround2) + "(Func<T1, T2, T3, U>, Func<T2>) => Func<T1, T3, U>")]
        public void Surround2()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround2
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround3) + "(Func<T1, T2, T3, U>, Func<T3>) => Func<T1, T2, U>")]
        public void Surround3()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround3
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround) + "(Func<T1, T2, T3, U>, Func<T4, T1>) => Func<T2, T3, T4, U>")]
        public void Surround()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround2) + "(Func<T1, T2, T3, U>, Func<T4, T2>) => Func<T1, T3, T4, U>")]
        public void Surround2()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround2
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround3) + "(Func<T1, T2, T3, U>, Func<T4, T3>) => Func<T1, T2, T4, U>")]
        public void Surround3()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround3
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround) + "(Func<T1, T2, T3, U>, Func<T4, T5, T1>) => Func<T2, T3, T4, T5, U>")]
        public void Surround()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround2) + "(Func<T1, T2, T3, U>, Func<T4, T5, T2>) => Func<T1, T3, T4, T5, U>")]
        public void Surround2()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround2
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround3) + "(Func<T1, T2, T3, U>, Func<T4, T5, T3>) => Func<T1, T2, T4, T5, U>")]
        public void Surround3()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround3
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround) + "(Func<T1, T2, T3, T4, U>, Func<T1>) => Func<T2, T3, T4, U>")]
        public void Surround()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround2) + "(Func<T1, T2, T3, T4, U>, Func<T2>) => Func<T1, T3, T4, U>")]
        public void Surround2()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround2
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround3) + "(Func<T1, T2, T3, T4, U>, Func<T3>) => Func<T1, T2, T4, U>")]
        public void Surround3()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround3
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround4) + "(Func<T1, T2, T3, T4, U>, Func<T4>) => Func<T1, T2, T3, U>")]
        public void Surround4()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround4
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround) + "(Func<T1, T2, T3, T4, U>, Func<T5, T1>) => Func<T2, T3, T4, T5, U>")]
        public void Surround()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround2) + "(Func<T1, T2, T3, T4, U>, Func<T5, T2>) => Func<T1, T3, T4, T5, U>")]
        public void Surround2()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround2
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround3) + "(Func<T1, T2, T3, T4, U>, Func<T5, T3>) => Func<T1, T2, T4, T5, U>")]
        public void Surround3()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround3
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Surround4) + "(Func<T1, T2, T3, T4, U>, Func<T5, T4>) => Func<T1, T2, T3, T5, U>")]
        public void Surround4()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Surround4
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose) + "(Func<T1>, Action<T1>) => Action")]
        public void Enclose()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose) + "(Func<T2, T1>, Action<T1>) => Action<T2>")]
        public void Enclose()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose) + "(Func<T2, T3, T1>, Action<T1>) => Action<T2, T3>")]
        public void Enclose()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Extensions)+ "." + nameof(LogicExt)+ "." + nameof(LogicExt.Enclose) + "(Func<T2, T3, T4, T1>, Action<T1>) => Action<T2, T3, T4>")]
        public void Enclose()
        {
            // TODO: Implement method test LCore.Extensions.LogicExt.Enclose
        }

    }
}
