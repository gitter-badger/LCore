// WARNING: this file was autogenerated by LUnit. Remove this line or move this file to prevent this file's contents from being overwritten.
using Xunit.Abstractions;
using LCore.LUnit;
using Xunit;
using System;
using LCore.Numbers;
namespace L_Tests.LCore.Numbers
{
    ///<summary>
    /// Covering class: LCore.Numbers.SByteNumber
    ///
    ///LUnit has Autogenerated 7 method stubs:
    ///</summary>
    public partial class SByteNumberTester
    {
        [Fact]
        [Trait(Traits.TargetMember,"LCore.Numbers.SByteNumber.op_Implicit(SByte) => SByteNumber")]
        public void op_Implicit()
        {
            // TODO: Implement method test LCore.Numbers.SByteNumber.op_Implicit
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Numbers)+ "." + nameof(SByteNumber)+ "." + nameof(SByteNumber.GetValuePrecision) + "() => Number")]
        public void GetValuePrecision()
        {
            // TODO: Implement method test LCore.Numbers.SByteNumber.GetValuePrecision
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Numbers)+ "." + nameof(SByteNumber)+ "." + nameof(SByteNumber.Add) + "(SByte, SByte) => SByte")]
        public void Add()
        {
            // TODO: Implement method test LCore.Numbers.SByteNumber.Add
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Numbers)+ "." + nameof(SByteNumber)+ "." + nameof(SByteNumber.Subtract) + "(SByte, SByte) => SByte")]
        public void Subtract()
        {
            // TODO: Implement method test LCore.Numbers.SByteNumber.Subtract
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Numbers)+ "." + nameof(SByteNumber)+ "." + nameof(SByteNumber.Multiply) + "(SByte, SByte) => SByte")]
        public void Multiply()
        {
            // TODO: Implement method test LCore.Numbers.SByteNumber.Multiply
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Numbers)+ "." + nameof(SByteNumber)+ "." + nameof(SByteNumber.Divide) + "(SByte, SByte) => Object")]
        public void Divide()
        {
            // TODO: Implement method test LCore.Numbers.SByteNumber.Divide
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.Numbers)+ "." + nameof(SByteNumber)+ "." + nameof(SByteNumber.New) + "(SByte) => Number<SByte>")]
        public void New()
        {
            // TODO: Implement method test LCore.Numbers.SByteNumber.New
        }

    }
}
