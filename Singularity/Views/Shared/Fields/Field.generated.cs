#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.Design;
    using System.IO;
    using System.Linq;
    using System.Linq.Expressions;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Mvc.Routing;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    
    #line 4 "..\..\Views\Shared\Fields\Field.cshtml"
    using LCore.Extensions;
    
    #line default
    #line hidden
    using Singularity;
    
    #line 7 "..\..\Views\Shared\Fields\Field.cshtml"
    using Singularity.Annotations;
    
    #line default
    #line hidden
    using Singularity.Context;
    using Singularity.Controllers;
    
    #line 6 "..\..\Views\Shared\Fields\Field.cshtml"
    using Singularity.Extensions;
    
    #line default
    #line hidden
    using Singularity.Models;
    
    #line 5 "..\..\Views\Shared\Fields\Field.cshtml"
    using Singularity.Routes;
    
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Shared/Fields/Field.cshtml")]
    public partial class _Views_Shared_Fields_Field_cshtml : System.Web.Mvc.WebViewPage<IViewField>
    {
        public _Views_Shared_Fields_Field_cshtml()
        {
        }
        public override void Execute()
        {
WriteLiteral("\r\n\r\n\r\n");

WriteLiteral("\r\n");

            
            #line 9 "..\..\Views\Shared\Fields\Field.cshtml"
  


            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n");

            
            #line 15 "..\..\Views\Shared\Fields\Field.cshtml"
 try
    {

    if (Model.ViewTypes.Has(ControllerHelper.ViewType.TableCell))
        {
        
            
            #line default
            #line hidden
            
            #line 20 "..\..\Views\Shared\Fields\Field.cshtml"
   Write(Html.Raw($"<td class=\"{Model.ColumnClass}\">"));

            
            #line default
            #line hidden
            
            #line 20 "..\..\Views\Shared\Fields\Field.cshtml"
                                                        
        }

    if (Html.ViewExists(PartialViews.Field_PropertyName_Before(Model.PropertyName)))
        {
        // Display the Before view, if it exists.
        
            
            #line default
            #line hidden
            
            #line 26 "..\..\Views\Shared\Fields\Field.cshtml"
   Write(Html.Partial(PartialViews.Field_PropertyName_Before(Model.PropertyName), Model));

            
            #line default
            #line hidden
            
            #line 26 "..\..\Views\Shared\Fields\Field.cshtml"
                                                                                        
        }

    if (Html.ViewExists(PartialViews.Field_PropertyType_Before(Model.FieldType)))
        {
        // Display the Before view, if it exists.
        
            
            #line default
            #line hidden
            
            #line 32 "..\..\Views\Shared\Fields\Field.cshtml"
   Write(Html.Partial(PartialViews.Field_PropertyType_Before(Model.FieldType), Model));

            
            #line default
            #line hidden
            
            #line 32 "..\..\Views\Shared\Fields\Field.cshtml"
                                                                                     
        }

    foreach (ControllerHelper.ViewType Type in Model.ViewTypes)
        {
        if (Html.ViewExists(PartialViews.Field_ViewType_Before(Type)))
            {
            // Display the After view, if it exists.
            
            
            #line default
            #line hidden
            
            #line 40 "..\..\Views\Shared\Fields\Field.cshtml"
       Write(Html.Partial(PartialViews.Field_ViewType_Before(Type), Model));

            
            #line default
            #line hidden
            
            #line 40 "..\..\Views\Shared\Fields\Field.cshtml"
                                                                          
            }
        }

    if (Html.ViewExists(PartialViews.Field_PropertyName(Model.PropertyName)))
        {
        // Override both View and Edit views for the property.
        
            
            #line default
            #line hidden
            
            #line 47 "..\..\Views\Shared\Fields\Field.cshtml"
   Write(Html.Partial(PartialViews.Field_PropertyName(Model.PropertyName), Model));

            
            #line default
            #line hidden
            
            #line 47 "..\..\Views\Shared\Fields\Field.cshtml"
                                                                                 
        }
    else
        {
        bool OverridenView = false;

        foreach (ControllerHelper.ViewType Type in Model.ViewTypes)
            {
            // Change this field override. It doesnt make sense.

            if (Html.ViewExists($"Fields/{Model.FieldType.Name}_{Type}"))
                {
                // Display the custom Type view
                
            
            #line default
            #line hidden
            
            #line 60 "..\..\Views\Shared\Fields\Field.cshtml"
           Write(Html.Partial($"Fields/{Model.FieldType.Name}_{Type}"));

            
            #line default
            #line hidden
            
            #line 60 "..\..\Views\Shared\Fields\Field.cshtml"
                                                                      
                OverridenView = true;
                }
            }

        List<IFieldPartial> PartialAttributes = Model.Meta.GetAttributes<IFieldPartial>() ?? new List<IFieldPartial>();

        foreach (IFieldPartial FieldBefore in PartialAttributes)
            {
            if (FieldBefore.IsActive(Html, Model, Model.ViewTypes))
                {
                FieldBefore.RenderPartial_Before(Html, Model, Model.ViewTypes);
                }
            }

        if (OverridenView)
            {
            }
        else if (Model.ViewTypes.HasAny(ControllerHelper.ViewType.Display, ControllerHelper.ViewType.TableCell) ||
            Model.Meta.IsReadOnly)
            {
            
            
            #line default
            #line hidden
            
            #line 81 "..\..\Views\Shared\Fields\Field.cshtml"
       Write(Html.Partial(PartialViews.Field_View, Model));

            
            #line default
            #line hidden
            
            #line 81 "..\..\Views\Shared\Fields\Field.cshtml"
                                                         
            }
        else if (Model.ViewTypes.HasAny(ControllerHelper.ViewType.Edit, ControllerHelper.ViewType.Create))
            {
            
            
            #line default
            #line hidden
            
            #line 85 "..\..\Views\Shared\Fields\Field.cshtml"
       Write(Html.Partial(PartialViews.Field_Edit, Model));

            
            #line default
            #line hidden
            
            #line 85 "..\..\Views\Shared\Fields\Field.cshtml"
                                                         
            }

        PartialAttributes.Reverse();

        foreach (IFieldPartial FieldAfter in PartialAttributes)
            {
            if (FieldAfter.IsActive(Html, Model, Model.ViewTypes))
                {
                FieldAfter.RenderPartial_After(Html, Model, Model.ViewTypes);
                }
            }
        }

    if (Html.ViewExists(PartialViews.Field_PropertyType_After(Model.FieldType)))
        {
        // Display the Before view, if it exists.
        
            
            #line default
            #line hidden
            
            #line 102 "..\..\Views\Shared\Fields\Field.cshtml"
   Write(Html.Partial(PartialViews.Field_PropertyType_After(Model.FieldType), Model));

            
            #line default
            #line hidden
            
            #line 102 "..\..\Views\Shared\Fields\Field.cshtml"
                                                                                    
        }

    foreach (ControllerHelper.ViewType Type in Model.ViewTypes)
        {
        if (Html.ViewExists(PartialViews.Field_ViewType_After(Type)))
            {
            // Display the After view, if it exists.
            
            
            #line default
            #line hidden
            
            #line 110 "..\..\Views\Shared\Fields\Field.cshtml"
       Write(Html.Partial(PartialViews.Field_ViewType_After(Type), Model));

            
            #line default
            #line hidden
            
            #line 110 "..\..\Views\Shared\Fields\Field.cshtml"
                                                                         
            }
        }

    if (Html.ViewExists(PartialViews.Field_PropertyName_After(Model.PropertyName)))
        {
        // Display the After view, if it exists.
        
            
            #line default
            #line hidden
            
            #line 117 "..\..\Views\Shared\Fields\Field.cshtml"
   Write(Html.Partial(PartialViews.Field_PropertyName_After(Model.PropertyName), Model));

            
            #line default
            #line hidden
            
            #line 117 "..\..\Views\Shared\Fields\Field.cshtml"
                                                                                       
        }

    if (Model.ViewTypes.Has(ControllerHelper.ViewType.TableCell))
        {
        
            
            #line default
            #line hidden
            
            #line 122 "..\..\Views\Shared\Fields\Field.cshtml"
   Write(Html.Raw("</td>"));

            
            #line default
            #line hidden
            
            #line 122 "..\..\Views\Shared\Fields\Field.cshtml"
                          
        }
    }
catch (Exception e)
    {
    ControllerHelper.HandleError(Context, e);

    if (Model.ViewTypes.Has(ControllerHelper.ViewType.TableCell))
        {
        
            
            #line default
            #line hidden
            
            #line 131 "..\..\Views\Shared\Fields\Field.cshtml"
   Write(Html.Raw("<td>"));

            
            #line default
            #line hidden
            
            #line 131 "..\..\Views\Shared\Fields\Field.cshtml"
                         
        }

        
            
            #line default
            #line hidden
            
            #line 134 "..\..\Views\Shared\Fields\Field.cshtml"
   Write(Html.Partial(PartialViews.Field_Error, e));

            
            #line default
            #line hidden
            
            #line 134 "..\..\Views\Shared\Fields\Field.cshtml"
                                                  

    if (Model.ViewTypes.Has(ControllerHelper.ViewType.TableCell))
        {
        
            
            #line default
            #line hidden
            
            #line 138 "..\..\Views\Shared\Fields\Field.cshtml"
   Write(Html.Raw("</td>"));

            
            #line default
            #line hidden
            
            #line 138 "..\..\Views\Shared\Fields\Field.cshtml"
                          
        }
    }

            
            #line default
            #line hidden
        }
    }
}
#pragma warning restore 1591
