@inherits SingularityRazor

@using System.Reflection
@using LCore.Interfaces
@using LCore.Tools
@using Singularity.Extensions

@{
    Type[] ExtensionClasses_Singularity = L.Ref.GetNamespaceTypes(typeof(Singularity),
        Singularity.Namespaces.Singularity.Extensions,
        typeof(IExtensionProvider));

    Type[] ExtensionClasses_L = L.Ref.GetNamespaceTypes(typeof(L),
        Singularity.Namespaces.LCore.Extensions,
        typeof(IExtensionProvider));
}

<aside class="main-sidebar">
    <section class="sidebar">

        <div class="user-panel">

            @if (Auth.IsLoggedIn)
                {
                <div class="pull-left image">
                    <ident class="img-circle">@User.GetHashCode()</ident>
                </div>
                <div class="pull-left info">
                    <p>Alexander Pierce</p>
                    <a href="#"><i class="fa fa-circle text-success"></i> Online</a>
                </div>
                }
        </div>

        <form action="#" method="get" class="sidebar-form site-search-form">
            <div class="input-group">
                <input type="text" name="q" class="form-control" placeholder="Search...">
                <span class="input-group-btn">
                    <button type="submit" name="search" id="search-btn" class="btn btn-flat">
                        <i class="fa fa-search"></i>
                    </button>
                </span>
            </div>
        </form>
        <ul class="sidebar-menu">
            <li class="header">MAIN NAVIGATION</li>

            <li class="active treeview">
                <a href="/">
                    @Html.FontAwesome(FontAwesomeExt.Icon.circle)
                    <span>@Singularity.AppName</span>
                    <i class="fa fa-angle-left pull-right"></i>
                </a>
                <ul class="treeview-menu">
                    <li @(ViewBag.Breadcrumbs?.Contains(
                        (Expression<Func<Set<string,string>,bool>>)(set=> set.Obj2.ToLower() == Url.Action(nameof(ExamplesController.L), typeof(ExamplesController).CName()))) == true ?
                        "class=\"active\"" : "")>
                        <a href="@Url.Action(nameof(ExamplesController.L),typeof(ExamplesController).CName())">
                            @Html.FontAwesome(FontAwesomeExt.Icon.gbp)
                            L <small class="right">(C#)</small><br />
                            <small>Standalone Extension Library</small>
                            <i class="fa fa-angle-left pull-right"></i>
                        </a>
                        <ul class="treeview-menu">
                            <li @(ViewBag.Breadcrumbs?.Contains(
                                (Expression<Func<Set<string,string>,bool>>)(set=> set.Obj2.ToLower() == Url.Action(nameof(ExamplesController.L_Extensions), typeof(ExamplesController).CName()))) == true ?
                                "class=\"active\"" : "")>
                                <a href="@Url.Action(nameof(ExamplesController.L_Extensions),typeof(ExamplesController).CName())">
                                    @Html.FontAwesome(FontAwesomeExt.Icon.link)
                                    Extensions
                                    <small class="right">(C#)</small>
                                    <i class="fa fa-angle-left pull-right"></i>
                                </a>

                                <ul class="treeview-menu">
                                    @foreach (var Ext in ExtensionClasses_L)
                                        {
                                        <li @(ViewBag.Breadcrumbs?.Contains( (Expression<Func<Set<string, string>, bool>>)(set => set.Obj2.ToLower() == Url.Action(nameof(ExamplesController.L_Extensions_Class), typeof(ExamplesController).CName(), new { ClassName = Ext.Name }))) == true ? "class=\"active\"" : "")>
                                            <a href="@Url.Action(nameof(ExamplesController.L_Extensions_Class), typeof(ExamplesController).CName(),
                                                    new { ClassName = Ext.Name })">
                                                @Html.FontAwesome(Singularity.Icons.GetTypeIcon(Ext) ?? FontAwesomeExt.Icon.question)
                                                @Ext.Name.Humanize().TrimEnd("Ext")
                                                <small class="right">(C#)</small>
                                                <i class="fa fa-angle-left pull-right"></i>
                                            </a>
                                            @{
                                            MethodInfo[] ExtMethods = Ext.GetExtensionMethods();
                                            }
                                            <ul class="treeview-menu">
                                                @foreach (var Method in ExtMethods)
                                                    {
                                                    <li>
                                                        <a href="#">
                                                            @Html.FontAwesome(FontAwesomeExt.Icon.question)
                                                            @Method.Name
                                                            <small class="right">
                                                                @Method.ToInvocationSignature()
                                                            </small>
                                                            <i class="fa fa-angle-left pull-right"></i>
                                                        </a>
                                                    </li>
                                                    }
                                            </ul>
                                        </li>
                                        }
                                </ul>
                            </li>
                            <li>
                                <a href="#">
                                    @Html.FontAwesome(FontAwesomeExt.Icon.wrench)
                                    Tools
                                    <small class="right">(C#)</small>
                                    <i class="fa fa-angle-left pull-right"></i>
                                </a>
                            </li>
                        </ul>
                    </li>
                    <li>
                        <a href="@Url.Action(nameof(ExamplesController.Singularity),typeof(ExamplesController).CName())">
                            @Html.FontAwesome(FontAwesomeExt.Icon.dot_circle_o)
                            Singularity <small class="right">(C#)</small><br />
                            <small>MVC-based framework</small>
                            <i class="fa fa-angle-left pull-right"></i>
                        </a>
                        <ul class="treeview-menu">
                            <li>
                                <a href="@Url.Action(nameof(ExamplesController.SingularityExtensions),typeof(ExamplesController).CName())">
                                    @Html.FontAwesome(FontAwesomeExt.Icon.link)
                                    Extensions
                                    <small class="right">(C#)</small>
                                    <i class="fa fa-angle-left pull-right"></i>
                                </a>
                                <ul class="treeview-menu">
                                    @foreach (var Ext in ExtensionClasses_Singularity)
                                        {
                                        <li>
                                            <a href="#">
                                                @Html.FontAwesome(Singularity.Icons.GetTypeIcon(Ext) ?? FontAwesomeExt.Icon.question)
                                                @Ext.Name.Trim("Ext").Humanize()
                                                <small class="right"></small>
                                            </a>


                                        </li>
                                        }
                                </ul>
                            </li>
                            <li>
                                <a href="#">
                                    @Html.FontAwesome(FontAwesomeExt.Icon.wrench)
                                    Tools
                                    <small class="right">(C#)</small>
                                </a>
                            </li>
                            <li>
                                <a href="#">
                                    @Html.FontAwesome(FontAwesomeExt.Icon.file_code_o)
                                    Views
                                    <small class="right">(C#)</small>
                                </a>
                            </li>
                        </ul>
                    </li>
                    <li>
                        <a href="#">
                            @Html.FontAwesome(FontAwesomeExt.Icon.link)
                            Singularity TS<small class="right">(HTML)(TS)(JS)</small><br />
                            <small>Extension library and template engine</small>
                            <i class="fa fa-angle-left pull-right"></i>
                        </a>
                        <ul class="treeview-menu">
                            <li>
                                <a href="#">
                                    @Html.FontAwesome(FontAwesomeExt.Icon.link)
                                    Extension library
                                    <small class="right">(TS)(JS)</small>
                                    <i class="fa fa-angle-left pull-right"></i>
                                </a>
                            </li>
                            <li>
                                <a href="#">
                                    @Html.FontAwesome(FontAwesomeExt.Icon.file_code_o)
                                    Templating library
                                    <small class="right">(HTML)</small>
                                    <i class="fa fa-angle-left pull-right"></i>
                                </a>
                            </li>
                        </ul>
                    </li>
                </ul>
            </li>
        </ul>
    </section>
</aside>