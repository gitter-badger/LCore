@* Generator: MvcView *@
@using Singularity.Extensions;
@using LCore.Extensions;
@* ReSharper disable once RedundantUsingDirective*@
@using LMVC.Routes;

@{
}

@model IViewField

@if (Model.PropertyData != null && 
    Model.PropertyData.ToString().Length > SingularityControllerHelper.DefaultTableTextLength)
    {
    <a class="btn btn-default"
       title="@Model.PropertyData.ToString()"
       href="@Model.Route_FieldRelation(ViewBag.ControllerName)">
        <span>
            @Model.PropertyData.ToString().Substring(0, SingularityControllerHelper.DefaultTableTextLength)
        </span>
    </a>
    }
else
    {
    <a class="btn btn-default"
       href="@Model.Route_FieldRelation(ViewBag.ControllerName)">
        <span>
            @Model.PropertyData.ToString()
        </span>
    </a>
    }

@if (Model.PropertyData != null && 
    ViewContext.AllowEdit(Model.FieldType) &&
    !Model.ViewTypes.Has(ControllerHelper.ViewType.TableCell))
    {
    <a class="btn btn-default"
       href="@Url.Action(nameof(ManageController.Edit),
        ContextProviderFactory.GetCurrent().GetManageController(Session, Model.FieldType)?.Name,
        Controllers.Manage.Actions.Route_Edit((IModel)Model.PropertyData, Request.Url?.AbsoluteUri))">
        <span>
            <glyph>&#xe065;</glyph>
            Edit
        </span>
    </a>
    }

@if (Model.PropertyData == null && 
    ViewContext.AllowCreate(Model.FieldType) &&
    !Model.ViewTypes.Has(ControllerHelper.ViewType.TableCell))
    {
    <a class="btn btn-default"
       href="@Url.Action(nameof(ManageController.Create),
        ContextProviderFactory.GetCurrent().GetManageController(Session, Model.FieldType)?.Name,
        Controllers.Manage.Actions.Route_Create(Request.Url?.AbsoluteUri))">
        <span>
            <glyph>&#x2a;</glyph>
            Create
        </span>
    </a>
    }