#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    
    #line 8 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
    using System.ComponentModel.DataAnnotations.Schema;
    
    #line default
    #line hidden
    using System.ComponentModel.Design;
    using System.IO;
    using System.Linq;
    using System.Linq.Expressions;
    using System.Net;
    
    #line 9 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
    using System.Reflection;
    
    #line default
    #line hidden
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Mvc.Routing;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    
    #line 5 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
    using LCore.Extensions;
    
    #line default
    #line hidden
    using Singularity;
    
    #line 7 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
    using Singularity.Annotations;
    
    #line default
    #line hidden
    using Singularity.Context;
    using Singularity.Controllers;
    
    #line 6 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
    using Singularity.Extensions;
    
    #line default
    #line hidden
    using Singularity.Models;
    
    #line 4 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
    using Singularity.Routes;
    
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Shared/Manage/Fields/FieldEdit.cshtml")]
    public partial class _Views_Shared_Manage_Fields_FieldEdit_cshtml : System.Web.Mvc.WebViewPage<IViewField>
    {
        public _Views_Shared_Manage_Fields_FieldEdit_cshtml()
        {
        }
        public override void Execute()
        {
WriteLiteral("\r\n\r\n");

WriteLiteral("\r\n");

WriteLiteral("\r\n");

            
            #line 11 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
  
    var Meta = Model.Meta;

    LambdaExpression Lambda = null;

    bool ShowLabel = Model.ViewTypes.HasAny(ControllerHelper.ViewType.Create, ControllerHelper.ViewType.Edit, ControllerHelper.ViewType.Display) &&
        (!Meta.AdditionalValues.ContainsKey(FieldHideLabelAttribute.HideLabel) ||
        (bool)Meta.AdditionalValues[FieldHideLabelAttribute.HideLabel] != true);

    if (Model.PropertyName.Contains("."))
        {
        string[] FullProperties;

        Lambda = Model.ModelData.TrueModelType().FindSubProperty(out Meta, out FullProperties, Model.PropertyName.Split("."));
        }
    else
        {
        Meta = Model.ModelData.TrueModelType().Meta(Model.PropertyName);
        }

    if (Lambda == null)
        {
        Model.ModelData.GetProperty(Meta.PropertyName);
        }
    else
        {
        var Func = Lambda.Compile();
        try
            {
            Func.DynamicInvoke(Model);
            }
        catch (MemberAccessException) { }
        catch (TargetInvocationException) { }
        }

    RangeAttribute Attr = null;

    if (Model.Meta.HasAttribute<RangeAttribute>(true))
        {
        Attr = Model.Meta.GetAttribute<RangeAttribute>(true);
        }

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n");

WriteLiteral("\r\n");

            
            #line 57 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
 if (Model.Meta.PropertyName == ControllerHelper.AutomaticFields.Active)
    {
    return;
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n<div");

WriteAttribute("class", Tuple.Create(" class=\"", 1667), Tuple.Create("\"", 1823)
, Tuple.Create(Tuple.Create("", 1675), Tuple.Create("field", 1675), true)
            
            #line 62 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
, Tuple.Create(Tuple.Create(" ", 1680), Tuple.Create<System.Object, System.Int32>(Model.ViewTypes.CollectStr((i, Type) => $"{Type.ToString().ToLower()}-field ")
            
            #line default
            #line hidden
, 1681), false)
, Tuple.Create(Tuple.Create(" ", 1760), Tuple.Create("field-", 1761), true)
            
            #line 62 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
                        , Tuple.Create(Tuple.Create("", 1767), Tuple.Create<System.Object, System.Int32>(Model.ColumnClass
            
            #line default
            #line hidden
, 1767), false)
            
            #line 62 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
                                          , Tuple.Create(Tuple.Create(" ", 1785), Tuple.Create<System.Object, System.Int32>(Model.ModelFieldClasses.Combine(" ")
            
            #line default
            #line hidden
, 1786), false)
);

WriteLiteral("\r\n     data-object-type=\"");

            
            #line 63 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
                  Write(Meta.ModelType);

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral("\r\n     data-type-name=\"");

            
            #line 64 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
                Write(Meta.DataTypeName);

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral("\r\n     ");

            
            #line 65 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
Write(Html.Raw(Model.ModelFieldHtmlAttributes.Combine(" ")));

            
            #line default
            #line hidden
WriteLiteral("\r\n     maximum=\"");

            
            #line 66 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
          Write(Attr?.Maximum);

            
            #line default
            #line hidden
WriteLiteral("\"\r\n     minimum=\"");

            
            #line 67 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
          Write(Attr?.Minimum);

            
            #line default
            #line hidden
WriteLiteral("\">\r\n\r\n");

            
            #line 69 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
    
            
            #line default
            #line hidden
            
            #line 69 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
     if (Model.Meta.HasAttribute<HiddenInputAttribute>(true))
        {
        
            
            #line default
            #line hidden
            
            #line 71 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
   Write(Html.ViewField(Model));

            
            #line default
            #line hidden
            
            #line 71 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
                              
        }
    else
        {
        
            
            #line default
            #line hidden
            
            #line 75 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
   Write(Html.ValidationMessage(Model.Meta.PropertyName));

            
            #line default
            #line hidden
            
            #line 75 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
                                                        

        if (ShowLabel)
            {
            string Label = Model.Meta.DisplayName ?? Model.Meta.PropertyName.Humanize();
            
            
            #line default
            #line hidden
            
            #line 80 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
       Write(Html.TextContent($"Manage_Edit_Field_Label_{Model.ModelData.GetFriendlyTypeName()}_{Label}",
                Html.Label(Model.Meta.PropertyName, Label)));

            
            #line default
            #line hidden
            
            #line 81 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
                                                           
            }

        if (Model.Meta.IsRequired)
            {

            
            #line default
            #line hidden
WriteLiteral("            <span");

WriteLiteral(" class=\"required-mark\"");

WriteLiteral(">*</span>\r\n");

            
            #line 87 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
            }

        if (Meta.HasAttribute<ICustomPartial>() &&
            Meta.GetAttribute<ICustomPartial>().IsActive(Html, Model, Model.ViewTypes))
            {
            Meta.GetAttribute<ICustomPartial>().RenderPartial(Html, Model, Model.ViewTypes);
            }
        else if (Html.ViewExists(PartialViews.Manage.Fields.Edit.PropertyName(Model.PropertyName)))
            {
            // Override the Edit view for the property.

            
            
            #line default
            #line hidden
            
            #line 98 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
       Write(Html.Partial(PartialViews.Manage.Fields.Edit.PropertyName(Model.PropertyName), Model));

            
            #line default
            #line hidden
            
            #line 98 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
                                                                                                  
            }
        else if (Model.Meta.HasAttribute<KeyAttribute>(true))
            {
            
            
            #line default
            #line hidden
            
            #line 102 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
       Write(Html.Partial(PartialViews.Manage.Fields.Edit.Key, Model));

            
            #line default
            #line hidden
            
            #line 102 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
                                                                     
            }
        else if (Model.Meta.ModelType == typeof(bool) ||
            Model.Meta.ModelType == typeof(bool?))
            {
            
            
            #line default
            #line hidden
            
            #line 107 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
       Write(Html.Partial(PartialViews.Manage.Fields.Edit.Boolean, Model));

            
            #line default
            #line hidden
            
            #line 107 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
                                                                         
            }
        else if (Model.Meta.DataTypeName == DataType.Currency.ToString())
            {
            
            
            #line default
            #line hidden
            
            #line 111 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
       Write(Html.Partial(PartialViews.Manage.Fields.Edit.Currency, Model));

            
            #line default
            #line hidden
            
            #line 111 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
                                                                          
            }
        else if (Model.Meta.ModelType == typeof(int) ||
            Model.Meta.ModelType == typeof(int?))
            {
            if (Attr != null && (int)Attr.Maximum != int.MaxValue &&
                (int)Attr.Minimum != int.MinValue)
                {
                
            
            #line default
            #line hidden
            
            #line 119 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
           Write(Html.Partial(PartialViews.Manage.Fields.Edit.IntRange, Model));

            
            #line default
            #line hidden
            
            #line 119 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
                                                                              
                }
            else
                {
                
            
            #line default
            #line hidden
            
            #line 123 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
           Write(Html.Partial(PartialViews.Manage.Fields.Edit.Int, Model));

            
            #line default
            #line hidden
            
            #line 123 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
                                                                         
                }
            }
        else if (Model.Meta.ModelType == typeof(long) ||
            Model.Meta.ModelType == typeof(long?))
            {
            
            
            #line default
            #line hidden
            
            #line 129 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
       Write(Html.Partial(PartialViews.Manage.Fields.Edit.Long, Model));

            
            #line default
            #line hidden
            
            #line 129 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
                                                                      
            }
        else if (Model.Meta.ModelType == typeof(double) ||
            Model.Meta.ModelType == typeof(double?) ||
            Model.Meta.ModelType == typeof(float) ||
            Model.Meta.ModelType == typeof(float?) ||
            Model.Meta.ModelType == typeof(decimal) ||
            Model.Meta.ModelType == typeof(decimal?))
            {
            
            
            #line default
            #line hidden
            
            #line 138 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
       Write(Html.Partial(PartialViews.Manage.Fields.Edit.Decimal, Model));

            
            #line default
            #line hidden
            
            #line 138 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
                                                                         
            }
        else if (Model.Meta.ModelType == typeof(DateTime) ||
            Model.Meta.ModelType == typeof(DateTime?))
            {
            
            
            #line default
            #line hidden
            
            #line 143 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
       Write(Html.Partial(PartialViews.Manage.Fields.Edit.DateTime, Model));

            
            #line default
            #line hidden
            
            #line 143 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
                                                                          
            }
        else if (Model.Meta.ModelType.PreferGeneric().IsEnum)
            {
            
            
            #line default
            #line hidden
            
            #line 147 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
       Write(Html.Partial(PartialViews.Manage.Fields.Edit.Enum, Model));

            
            #line default
            #line hidden
            
            #line 147 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
                                                                      
            }
        else if (Model.Meta.ModelType.HasAttribute<ComplexTypeAttribute>(true))
            {
            
            
            #line default
            #line hidden
            
            #line 151 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
       Write(Html.Partial(PartialViews.Manage.Fields.Edit.ComplexType, Model));

            
            #line default
            #line hidden
            
            #line 151 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
                                                                             
            }
        else if (Model.Meta.ModelType.HasInterface<IModel>())
            {
            
            
            #line default
            #line hidden
            
            #line 155 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
       Write(Html.Partial(PartialViews.Manage.Fields.Edit.IModel, Model));

            
            #line default
            #line hidden
            
            #line 155 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
                                                                        
            }
        else if (Model.Meta.ModelType == typeof(string))
            {
            
            
            #line default
            #line hidden
            
            #line 159 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
        Write(Model.Meta.DataTypeName == DataType.MultilineText.ToString() ? Html.Partial(PartialViews.Manage.Fields.Edit.StringMultiLine, Model) : Html.Partial(PartialViews.Manage.Fields.Edit.String, Model));

            
            #line default
            #line hidden
            
            #line 159 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
                                                                                                                                                                                                                
            }
        else if (Html.ViewExists(PartialViews.Manage.Fields.Edit.PropertyType(Model.Meta.ModelType)))
            {
            
            
            #line default
            #line hidden
            
            #line 163 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
       Write(Html.Partial(PartialViews.Manage.Fields.Edit.PropertyType(Model.Meta.ModelType), Model));

            
            #line default
            #line hidden
            
            #line 163 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
                                                                                                    
            }
        else if (Html.ViewExists(PartialViews.Manage.Fields.Edit.DataTypeName(Model.Meta.DataTypeName)))
            {
            
            
            #line default
            #line hidden
            
            #line 167 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
       Write(Html.Partial(PartialViews.Manage.Fields.Edit.DataTypeName(Model.Meta.DataTypeName), Model));

            
            #line default
            #line hidden
            
            #line 167 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
                                                                                                       
            }
        else
            {
            
            
            #line default
            #line hidden
            
            #line 171 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
       Write(Html.Partial(PartialViews.Manage.Fields.Edit.Unknown, Model));

            
            #line default
            #line hidden
            
            #line 171 "..\..\Views\Shared\Manage\Fields\FieldEdit.cshtml"
                                                                         
            }
        }

            
            #line default
            #line hidden
WriteLiteral("</div>\r\n");

        }
    }
}
#pragma warning restore 1591
