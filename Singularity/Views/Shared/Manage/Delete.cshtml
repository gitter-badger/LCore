@* Generator: MvcView *@


@using LCore.Extensions;
@using Singularity.Extensions;

@{
    ViewBag.RestoreMode = Model.HasProperty("Active") && Model.GetProperty("Active") as bool? != true;

    ViewBag.Title = $"{(ViewBag.RestoreMode ? "Restore" : "Delete")} {Model.GetFriendlyTypeName()}: {Model}";
}

@model IModel


<div class="delete wide-form">
    <h1>
        @(ViewBag.RestoreMode ? "Restore" : "Delete") @Model.GetFriendlyTypeName()
    </h1>

    <h2>
        @Model.ToString()
    </h2>

    <div style="text-align: center;">
        <h3>
            Are you sure you want to @(ViewBag.RestoreMode ? "restore" : "delete") this @Model.GetFriendlyTypeName()?
        </h3>

        @using (Html.BeginForm("DeleteConfirm", (string)ViewBag.ControllerName, new { id = Model.GetID(), ViewBag.ReturnURL, Restore = ViewBag.RestoreMode }))
            {
            <a href="@ViewBag.ReturnURL"
               key-bind-click="N"
               class="btn-default btn-danger btn-lg pointer"
               key-bind-click-name="No">
                <span>
                    <glyph>&#xe091;</glyph>
                    No
                </span>
            </a>
            <a class="btn-default btn-lg btn-success pointer"
               key-bind-click="Y"
               key-bind-click-name="Yes"
               onclick="$('form').submit();">
                <span>
                    <glyph>@Html.Raw(ViewBag.RestoreMode ? "&#xe133;" : "&#xe020;")</glyph>
                    Yes
                </span>
            </a>
            }
    </div>

</div>
